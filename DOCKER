#Start

docker start container
docker run container


#connect to docker container 

docker exec -t -i runnin_container "bash"
docker 
#images

docker run images -p local:container (-P for dynamically)
docker rmi image

docker build -t name

docker run --rm --name _name images (rm means it will be deleted at the end)
#container

docker rm $(docker ps -a -q)

#DockFile

#comment
FROM base_images:tag
MAINTAINER firstname lastname
RUN <cmd> | ["executable","param1","param2"] #run mkdir name | "bin/bash","-C","mkdir name"];\
run yu update -y && yum install -y gamma
mkdir name
COPY local_file CONTAINER_folder
CMD <cmd>|["exec","param1","param3"]

#CMD

execution time 

ENTRYPOINT ["/bin/ping","-C","5"]
CMD ["localhost"]


-override entrypoint

docker run --entrypoint ls container_name

-override cmd
docker run container cmd


#ENTRYPOINT

ENTRYPOINT <CMD> (TERMINAL)
ENTRYPOINT ["exec","param1","param2"] (execution) will ignore CMD parame)


#EXEC

docker exec running_container cmd terminal

#EXPOSE

EXPOSE [port:]port

docker run -P (automatic) 



#ENV
->run
->overwrite ARG

#LABEL
metadata

#ARGS
->build

usage of args + env

FROM Centos:7
ARG Version
ENV Version ${Version:-1.0}
RUN echo $version > /tmp/version
CMD cat /tmp/version


#ONBUILD

execute only when inherited


#STOPSIGNAL <signal>

1- end session process sighup
2- stop the process sigint
3- quit process  sigquit
6- cancel process sigabrit
9- stop process directly (sigkill - process manager)
10- signal user1 (siguser1)
12- signal user2 (siguser2)
15_ terminate process (sigterm - process can manage it)


#security

#SUperVison
