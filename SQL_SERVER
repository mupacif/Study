#DATA STRUCTURES 

VREATE SYNONYM nom
FROM [PC400\ZEUS].adress.Shema.table

#SCHEMA
create schema Name AUTHORIZATION dbo
ALTER  schema name
	transfer dbo.job
#DATABASE FILEGROUP
	-Partially contained 
#INDEXES
	-Clustered
	-Non clustered
	-index with added cols
	-Filtred Index : CREATE (NONCLUSTERED) INDEX _name ON Table(col) WHERE IN NOT NULL(client belge)
	-Columnstore (sql server 2012) : regroupé en colonne - compressered (no read/write) (datawharehouse) create nonclustered columnstore index _name_
	-index de recouvrement(si les elements sont ordonné dans un select) - taille index
	
	recap:
	-identify column to user
	-select index type(clusterd/non clustered(added column)
	-add index options(unique, not unique, column storage)
	-choose filegroup secondary/primary

	best practice
	- select importante column
	- row intervals
	- smallest possible
	- dont use it on smal tables (?)
	- request wrapper 
	- unique indexes
exemple:

create table Person(
id int IDENTITY(1,1) NOT NULL Default(1,1),
Name nvarchar(50),
Description nvarchar(50),
isActive BIT
)
LTER TABLE Person
	ADD CONSTRAINT Pk_Person PRIMARY KEY NONCLUSTER(id)


	-vue indexé : create view scraps with schemabinding
	as
		select ...
	CREATE UNIQUE CLUSTERED INDEX _name 
	on scrp ( )
-Options: parallélisme 

#GENERAL

tempdb : donnée //
DROP_EXISTING : 
ONLINE : si la db est en utilisation


MODEL : used by sql server
MSDB : sql agent, jobs, operators 

#Security

1- login:password(create dbn backup)
----------------------------
2-user : no password(create table, alter


#Plannification 


management -> Maintenance plan - 
: sperate schedule for each tast | single schedule fot the entire plan or not ..
: maintenance tasks : 
:ordering
:check integrety task 
:planning
:job schedule
:shink condition
:index updating
:statistics :  sample by %
:bachup history cleanup
:extension(to know who backedup) - do not compress
:backup cleanup

#Operator 

Integration services catalogs 
-SQL Server Agent - Operator
ex: log files used Size


#Management - Maintenance Plans - ETL
#replication 
- snapshot publication * 
- transaction publication *
- peer to peer 
- merge 
